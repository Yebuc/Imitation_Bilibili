<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.bilibili.dao.UserDao">
    <insert id="addUser" parameterType="com.imooc.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into
                t_user(
                      phone,
                      email,
                      password,
                      salt,
                      createTime
        )values (
                      #{phone},
                      #{email},
                      #{password},
                      #{salt},
                      #{createTime}
        )
    </insert>
    <insert id="addUserInfo" parameterType="com.imooc.bilibili.domain.UserInfo">
        insert into
            t_user_info(
            userId,
            nick,
            avatar,
            sign,
            gender,
            birth,
            createTime
        )values (
                    #{userId},
                    #{nick},
                    #{avatar},
                    #{sign},
                    #{gender},
                    #{birth},
                    #{createTime}
                )
    </insert>

    <update id="updateUserInfos" parameterType="com.imooc.bilibili.domain.UserInfo">
        update
        t_user_info
        set
        <if test="nick != null and nick != '' ">
            nick = #{nick},
        </if>
        <if test="avatar != null">
            avatar = #{avatar},
        </if>
        <if test="sign != null">
            sign = #{sign},
        </if>
        <if test="birth != null and birth != '' ">
            birth = #{birth},
        </if>
        <if test="gender != null and gender != '' ">
            gender = #{gender},
        </if>
        updateTime = #{updateTime}
        where
        userId = #{userId}
    </update>

    <update id="updateUsers" parameterType="com.imooc.bilibili.domain.User">
        update
        t_user
        set
        <if test="phone != null and phone != '' ">
            phone = #{phone},
        </if>
        <if test="email != null and email != '' ">
            email = #{email},
        </if>
        <if test="password != null and password != '' ">
            password = #{password},
        </if>
        updateTime = #{updateTime}
        where
        id = #{id}
    </update>

    <!--    <sql id="Base_Column_List">-->
<!--        id,title,content,tags,-->
<!--        thumbNum,favourNum,userId,-->
<!--        createTime,updateTime,isDelete-->
<!--    </sql>-->

<!--    <select id="listPostWithDelete" resultType="com.yupi.springbootinit.model.entity.Post">-->
<!--        select *-->
<!--        from post-->
<!--        where updateTime >= #{minUpdateTime}-->
<!--    </select>-->

<!--    <select id="query" resultType="java.util.Map">-->
<!--        select * from post where id = #{id}-->
<!--    </select>-->

    <select id="getUserByPhone" resultType="com.imooc.bilibili.domain.User">
            select
                *
            from
                 t_user
            where
                  phone = #{phone}
    </select>
    <select id="getUserByPhoneOrEmail" parameterType="java.lang.String" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            phone = #{phone} or email = #{email}
    </select>

    <select id="getUserById" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            id = #{id}
    </select>

    <select id="getUserInfoByUserId" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            userId = #{userId}
    </select>


    <!--这里传入的是一个列表，这里我们不用指定传入参数的类型，只要写出传入的参数是什么就可以了，mybatis会自动识别-->
    <select id="getUserInfoByUserIds" resultType="com.imooc.bilibili.domain.UserInfo">
        select
        *
        from
        t_user_info
        where
        1=1
        <if test="userIdList != null and userIdList.size > 0">
            and userId in
            <foreach collection="userIdList" item = "userId" index="index" open="(" close=")" separator=",">
                #{userId}
            </foreach>
        </if>
    </select>
    <!--上面的where 1=1意思是如果接下来的if条件不生效，则会查询所有的消息-->


     <!--（这里是通过nick的模糊查询）得到所有需要查询数据的总个数total-->
    <select id="pageCountUserInfos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(1)
        from
        t_user_info
        where
        1=1
        <if test="nick != null and nick != '' ">
            and nick like '%${nick}%'
        </if>
    </select>

    <!--分页查询用户信息-->
    <select id="pageListUserInfos" parameterType="java.util.Map" resultType="com.imooc.bilibili.domain.UserInfo">
        select
        *
        from
        t_user_info
        where
        1=1
        <if test="nick != null and nick != '' ">
            and nick like '%${nick}%'
        </if>
        order by id desc
        limit #{start}, #{limit}
    </select>


</mapper>